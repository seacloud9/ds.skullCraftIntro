{
  "name": "three-effectcomposer",
  "version": "0.0.1",
  "description": "@alteredq's EffectComposer plugin for three.js ported for use with Browserify",
  "main": "index.js",
  "scripts": {
    "demo": "node_modules/.bin/browserify demo.js -o bundle.js && echo 'open index.html'"
  },
  "license": "MIT",
  "dependencies": {
    "three-copyshader": "0.0.1"
  },
  "devDependencies": {
    "three": "~0.55.0",
    "browserify": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/three-effectcomposer.git"
  },
  "keywords": [
    "three",
    "composer",
    "effect",
    "post",
    "processing",
    "shader",
    "fragment",
    "render"
  ],
  "author": {
    "name": "alteredq",
    "url": "http://alteredqualia.com/"
  },
  "readme": "# three-effectcomposer #\n\nBrowserify-friendly version of `THREE.EffectComposer`, which offers a quick\nGLSL post-processing implementation.\n\nFull credit goes to [@alteredq](http://github.com/alteredq) for writing this,\nthe original source can be found\n[here](http://mrdoob.github.com/three.js/examples/webgl_postprocessing.html).\n\n## Installation ##\n\n``` bash\nnpm install three-effectcomposer\n```\n\n## Running the Demo ##\n\nInstall the dependencies and build the script:\n\n``` bash\ngit clone git@github.com:hughsk/three-effectcomposer.git\ncd three-effectcomposer\nnpm install -d\nnpm run demo\n```\n\nThen just open up `index.html` to see the results.\n\n## Usage ##\n\nThis module doesn't touch the `THREE` object, instead you access the different\npass classes through `EffectComposer`. For a working example, see\n[`demo.js`](https://github.com/hughsk/three-effectcomposer/blob/master/demo.js).\n\n``` javascript\nvar THREE = require('three')\n  , EffectComposer = require('three-effectcomposer')(THREE)\n  , DotScreenShader = require('./shaders/dotscreen')\n  , RGBShiftShader = require('./shaders/rgbshift')\n\nvar renderer\n  , scene\n  , camera\n  , composer\n\ninit()\nanimate()\n\nfunction init() {\n  renderer = new THREE.WebGLRenderer\n  scene = new THREE.Scene\n  camera = new THREE.PerspectiveCamera(70, window.innerWidth/window.innerHeight, 1, 1000);\n\n  // ...\n  // The rest of your setup code, as per usual\n  // ...\n\n  // Create your composer and first RenderPass\n  composer = new EffectComposer(renderer)\n  composer.addPass(new EffectComposer.RenderPass(scene, camera))\n\n  // Redraw with a shader\n  var effect = new EffectComposer.ShaderPass(DotScreenShader)\n  composer.addPass(effect)\n\n  // And another shader, drawing to the screen at this point\n  var effect = new EffectComposer.ShaderPass(RGBShiftShader)\n  effect.renderToScreen = true\n  composer.addPass(effect)\n};\n\n// Instead of calling renderer.render, use\n// composer.render instead:\nfunction animate() {\n  requestAnimationFrame(animate)\n  composer.render()\n};\n```\n",
  "readmeFilename": "README.md",
  "_id": "three-effectcomposer@0.0.1",
  "_from": "three-effectcomposer@0.0.1"
}
